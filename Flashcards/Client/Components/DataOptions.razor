@inject IStringLocalizer<Resource> localizer

<div class="data-options__wrapper">

    <button class="data-options__button" @onclick="HandleExportClick">
        @localizer["Res_Export"]
    </button>

    <label class="data-options__button">
        @localizer["Res_Import"]
        <InputFile class="data-options__file-input" OnChange="OpenFile" accept=".fcd" />
    </label>

    <button class="data-options__button data-options__button--restore" @onclick="HandleRestoreDefaultsClick">
        @localizer["Res_RestoreDefaults"]
    </button>

</div>

@code {
    [Parameter] public EventCallback OnExport { get; set; }
    [Parameter] public EventCallback<string> OnImport { get; set; }
    [Parameter] public EventCallback OnRestoreDefaults { get; set; }

    async Task HandleExportClick() => await OnExport.InvokeAsync();
    async Task HandleImportClick() => await OnImport.InvokeAsync();
    async Task HandleRestoreDefaultsClick() => await OnRestoreDefaults.InvokeAsync();

    async Task OpenFile(InputFileChangeEventArgs e)
    {
        var file = e.File;
        var buffers = new byte[file.Size];
        await file.OpenReadStream().ReadAsync(buffers);
        var stringData = System.Text.Encoding.UTF8.GetString(buffers);

        await OnImport.InvokeAsync(stringData);
    }

}
